<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://906571331.github.io/yx.github.io/</id>
    <title>WuXin</title>
    <updated>2020-04-02T23:48:10.969Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://906571331.github.io/yx.github.io/"/>
    <link rel="self" href="https://906571331.github.io/yx.github.io/atom.xml"/>
    <subtitle>成千上万个门口，总有一个人要先走。</subtitle>
    <logo>https://906571331.github.io/yx.github.io/images/avatar.png</logo>
    <icon>https://906571331.github.io/yx.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, WuXin</rights>
    <entry>
        <title type="html"><![CDATA[django学习笔记URL篇]]></title>
        <id>https://906571331.github.io/yx.github.io/post/django-xue-xi-bi-ji-url-pian/</id>
        <link href="https://906571331.github.io/yx.github.io/post/django-xue-xi-bi-ji-url-pian/">
        </link>
        <updated>2020-04-02T14:33:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="本篇博客记录了博主平时django的一些学习笔记">本篇博客记录了博主平时Django的一些学习笔记：</h3>
<h4 id="1在urlpy中使用httpresponse">1.在Url.py中使用HttpResponse</h4>
<p>urls.py</p>
<pre><code class="language-bash">from django.http import HttpResponse
from django.urls import path, include
def index1(request):
    return HttpResponse(&quot;这才是首页&quot;)
def book(request):
	return HttpResponse(&quot;书籍首页&quot;)
urlpatterns = [
    path(&quot;&quot;,index1),
    path(&quot;book/&quot;,book),
]
</code></pre>
<p>开启debug模式可以在访问错误页面的时候发现运行中的错误，<br>
当Debug设置为False时，必须设置能够访问本网站的主机地址<br>
同时，在本页面出现错误时会返回Server Error (500)<br>
在生产环境中一定要关闭Debug模式，否则可能造成信息泄露<br>
<img src="https://img-blog.csdnimg.cn/20200401181539431.png" alt="在这里插入图片描述" loading="lazy"></p>
<h4 id="2project与app分开写视图函数">2.project与app分开写视图函数</h4>
<p>projetc/url.py</p>
<pre><code class="language-python">from book.views import book
urlpatterns = [
    path(&quot;book/&quot;,book),
]
</code></pre>
<p>book/views.py</p>
<pre><code class="language-python">from django.http import HttpResponse
def book(request):
	return HttpResponse(&quot;这是book首页&quot;)
</code></pre>
<h4 id="3url传递参数给视图函数">3.URL传递参数给视图函数</h4>
<p>一个参数views.py</p>
<pre><code class="language-python">def booklist(request,book_id):
    #可以根据数据库中的数据提取book的信息
    text = &quot;您获取的图书的id是：%s&quot; % book_id
    return HttpResponse(text)
</code></pre>
<p>一个参数urls.py</p>
<pre><code class="language-python">from book import booklist
urlpatterns = [
	path(&quot;book/&lt;book_id&gt;&quot;,booklist),
]
</code></pre>
<p>两个参数views.py</p>
<pre><code class="language-python">def booklist(request,book_id,book_name):
    #可以根据数据库中的数据提取book的信息
    text = &quot;您获取的图书的id是：%s ,您的图书的名字是：%s&quot; % (book_id,book_name)
    return HttpResponse(text)
</code></pre>
<p>两个参数urls.py</p>
<pre><code class="language-python">from book import booklist
urlpatterns = [
	path(&quot;book/&lt;book_id&gt;/&lt;book_name&gt;&quot;,booklist),
]
</code></pre>
<h4 id="4查询">4.查询</h4>
<p>views.py</p>
<pre><code class="language-python">def author(request):
	author_id=request.Get.get(&quot;id&quot;)
	text = &quot;作者的id为%s &quot; % author_id
	return HttpResponse(text)
</code></pre>
<p>urls.py</p>
<pre><code class="language-python">	path(&quot;author/&quot;,author)
</code></pre>
<p>查询时<br>
http://192.168.168.141:8000/author/?id=2<br>
<img src="https://img-blog.csdnimg.cn/2020040121074461.png" alt="在这里插入图片描述" loading="lazy"><br>
因为查询字符串使用的是GET请求，所以我们使用request.GET来获取参数，且因为GET是一个类似于字典的数类型，所以获取值跟字典的方式都是一样的</p>
<h4 id="5uuid的使用">5.uuid的使用</h4>
<p>uuid根据实际情况也可以换成int,或者str</p>
<pre><code class="language-python">from book import booklist
urlpatterns = [
	path(&quot;book/&lt;uuid:book_id&gt;&quot;,booklist),
]
</code></pre>
<p>使用uuid，只能访问uuid类型的字符串，其他的都是错误的<br>
在Python环境中导入一个uuid</p>
<pre><code class="language-python">import uuid
print(uuid.uuid4())
</code></pre>
<p>from django.urls import converters<br>
str不能加/，但是改为path就可以显示斜杠，具体使用看converters.py</p>
<h4 id="6url参数的转化器">6.url参数的转化器</h4>
<pre><code class="language-bash">str: 除了/以外的所有字符
int：阿拉伯数字
path:所有字符
uuid:uuid.uuid4()函数返回的格式
slug:英文字母、数字、横杠、下划线
</code></pre>
<h4 id="7url的模块化管理">7.url的模块化管理</h4>
<p>project/urls.py</p>
<pre><code class="language-python">from django.urls import path, include
urlpatterns = [
	path(&quot;book/&gt;&quot;,include(&quot;book.urls&quot;)),
]
</code></pre>
<p>book/urls.py</p>
<pre><code class="language-python">from django.urls import path
from .views import booklist
urlpatterns = [
	path(&quot;&lt;book_id&gt;/&quot;,booklist),
]
</code></pre>
<p>book/views.py</p>
<pre><code class="language-bash">from django.http import HttpResponse
def booklist(request,book_id):
	text = &quot;图书的id为%s &quot; % book_id
	return HttpResponse(text)
</code></pre>
<h4 id="8url命名与反转">8.url命名与反转</h4>
<p>在app的urls.py中添加app_name（应用命名空间），防止每个app的url重复，造成url找不到的情况<br>
front/views.py</p>
<pre><code class="language-python">from django.shortcuts import render,redirect,reverse
from django.http import HttpResponse

def index(request):
    username=request.GET.get(&quot;username&quot;)
    if username:
        return HttpResponse(&quot;这是前台首页&quot;)
    else:
        return redirect(reverse(&quot;front:login&quot;))
def login(request):
    return HttpResponse(&quot;这是前台的登录页面&quot;)
</code></pre>
<p>front/urls.py</p>
<pre><code class="language-python">from django.urls import path
from .views import index,login
app_name=&quot;front&quot;
urlpatterns=[
    path(&quot;&quot;,index),
    path(&quot;signin/&quot;,login,name=&quot;login&quot;),
]
</code></pre>
<h4 id="9应用实例命名空间">9.应用实例命名空间</h4>
<p>不能只制定实例命名空间，没有应用命名空间<br>
project/urls.py</p>
<pre><code class="language-bash">    path(&quot;cms1/&quot;,include(&quot;cms.urls&quot;,namespace=&quot;cms1&quot;)),
    path(&quot;cms2/&quot;,include(&quot;cms.urls&quot;,namespace=&quot;cms2&quot;)),
</code></pre>
<p>app/urls.py</p>
<pre><code class="language-bash">from django.shortcuts import render,reverse,redirect
from django.http import HttpResponse
def index(request):
    username=request.GET.get(&quot;username&quot;)
    if username:
        return HttpResponse(&quot;这是后台首页&quot;)
    else:
        current_namespace=request.resolver_match.namespace
        return redirect(reverse(&quot;%s:login&quot; %current_namespace))
def login(request):
    return HttpResponse(&quot;这是后台的登录页面&quot;)
</code></pre>
<h4 id="10re_path">10.re_path</h4>
<p>urls.py</p>
<pre><code class="language-python">    #P为参数的名字，&lt;year&gt;为类型，\d表示为日期型，{4}表示有4个数字
    #w:0-9,a-z,A-Z
    re_path(r&quot;^list/(?P&lt;year&gt;\d{4}/)&quot;,article_list),
    re_path(r&quot;^list/(?P&lt;year&gt;\d{4})/(?P&lt;month&gt;\d{4})&quot;,article_list_month),
</code></pre>
<p>views.py</p>
<pre><code class="language-python">def article_list(request,year):
    text = &quot;您输入的是第%s年的文章&quot; % year
    return HttpResponse(text)
</code></pre>
<p>此时list后面只能是四位数字<br>
<img src="https://img-blog.csdnimg.cn/20200402191129108.png" alt="在这里插入图片描述" loading="lazy"></p>
<h4 id="11跳转到指定的页面">11.跳转到指定的页面</h4>
<pre><code class="language-python">return redirect(reverse(&quot;&lt;article&gt;/&quot;,kwargs={&quot;article_id&quot;:1}))
</code></pre>
<h4 id="12添加多个标签">12.添加多个标签</h4>
<p>urls.py</p>
<pre><code class="language-python">    re_path(r&quot;list/(?P&lt;catagries&gt;\w+|(\w+\+\w+)+)/&quot;,article_list_lll),
</code></pre>
<p>views.py</p>
<pre><code class="language-python">def article_list_lll(request,catagries):
    text = &quot;您输入的是第%s的文章hhhh &quot; % catagries
    return HttpResponse(text)
</code></pre>
<h4 id="13自定义path">13.自定义path</h4>
<pre><code class="language-bash">from django.urls import converters,register_converter
class CategoryConverter(object):
    regex =r'\w+|(\w+\+\w+)+'
    def to_python(self,value):
        #python+django+flask
        #['python','django','flask']
        result=value.split(&quot;+&quot;)
        return result
    def to_url(self,value):
        #['python','django','flask']
        # python+django+flask
        if isinstance(value,list):
            result = &quot;+&quot;.join(value)
            return result
        else:
            raise RuntimeError(&quot;转换url的时候，分类参数必须为列表&quot;)
#应用命名空间
register_converter(CategoryConverter,'cate')

path(&quot;list/&lt;cate:catagries&gt;&quot;,article_list_lll),

</code></pre>
<p>views.py</p>
<pre><code class="language-bash">def article_list_lll(request,catagries):
    text = &quot;您输入的是第%s的文章hhhh &quot; % catagries
    return HttpResponse(text)
</code></pre>
<p><img src="https://img-blog.csdnimg.cn/2020040221085428.png" alt="在这里插入图片描述" loading="lazy"><br>
如果converters.py是另外的，则需要在init文件中导入converters<br>
<strong>init</strong>.py</p>
<pre><code class="language-python">from . import converters
</code></pre>
<h4 id="14自定义参数">14.自定义参数</h4>
<p>urls.py</p>
<pre><code class="language-bash">    path(&quot;&quot;,movies),
    path(&quot;page/&lt;int:page&gt;&quot;,movies),
</code></pre>
<p>views.py</p>
<pre><code class="language-bash">book_list=[
    &quot;三国演义&quot;,
    &quot;红楼梦&quot;,
    &quot;西游记&quot;,
    &quot;水浒传&quot;,
]
# Create your views here.
# def movie(request,movie_id):
#     text = &quot;电影的id为：%s&quot; % movie_id
#     return HttpResponse(text)

def movies(request,page=0):
    return HttpResponse(book_list[page])
</code></pre>
<p><img src="https://img-blog.csdnimg.cn/20200402221341463.png" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/20200402221414385.png" alt="在这里插入图片描述" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[解决Django开发中pycharm连接不到虚拟机的问题]]></title>
        <id>https://906571331.github.io/yx.github.io/post/jie-jue-django-kai-fa-zhong-pycharm-lian-jie-bu-dao-xu-ni-ji-de-wen-ti/</id>
        <link href="https://906571331.github.io/yx.github.io/post/jie-jue-django-kai-fa-zhong-pycharm-lian-jie-bu-dao-xu-ni-ji-de-wen-ti/">
        </link>
        <updated>2020-04-02T02:18:36.000Z</updated>
        <content type="html"><![CDATA[<h4 id="出现的问题">出现的问题</h4>
<p>在pycharm连接ubuntu时，出现了：</p>
<pre><code class="language-bash">Connection to '192.168.168.141' failed.
Session.connect：java.netConnectException: Connection timed out connect
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20200402101036518.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h4 id="解决的方法">解决的方法</h4>
<p>查看虚拟机的ip时，发现虚拟机的ip已经更换，所以在pycharm中，点击工具----&gt;Deployment----&gt;Configuration，以下三处分别改为虚拟机新的ip地址，（我的是从192.168.168.141改为192.168.168.145），点击Test SFTP connection，即可解决连接超时的问题<br>
<img src="https://img-blog.csdnimg.cn/20200402101531809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/2020040210172163.png" alt="在这里插入图片描述" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django常用学习网站]]></title>
        <id>https://906571331.github.io/yx.github.io/post/django-chang-yong-xue-xi-wang-zhan/</id>
        <link href="https://906571331.github.io/yx.github.io/post/django-chang-yong-xue-xi-wang-zhan/">
        </link>
        <updated>2020-03-31T02:33:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="本篇博客总结了一些django常用的一些学习网站欢迎留言补充">本篇博客总结了一些Django常用的一些学习网站，欢迎留言补充</h3>
<h4 id="1django中文网">1.<a href="https://www.django.cn/">Django中文网</a></h4>
<p>Django中文社区,是一个Django开发者和Django爱好者交流的社区,这里有很多django教程和django技术文档,欢迎广大喜欢Django的朋友加入！django,django教程,django,django社区,django文档,django中文<br>
<img src="https://img-blog.csdnimg.cn/20200331092025348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/20200331092120796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p>
<h4 id="2django-rest-framework">2.<a href="https://www.django-rest-framework.org/">django-rest-framework</a></h4>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20200331100915981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></figure>
<h4 id="3django文档">3.<a href="https://docs.djangoproject.com/zh-hans/2.0/">Django文档</a></h4>
<p>Django 有丰富的文档。一份高度概述的文档会告诉你在哪里找到特定的东西<br>
<img src="https://img-blog.csdnimg.cn/20200331101207485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p>
<h4 id="4菜鸟教程">4.<a href="https://www.runoob.com/django/django-tutorial.html">菜鸟教程</a></h4>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20200331101412255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></figure>
<h4 id="5刘江的django教程">5.<a href="https://www.liujiangblog.com/course/django/84">刘江的Django教程</a></h4>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20200331101728234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></figure>
<h4 id="6w3cschool">6.<a href="https://www.w3cschool.cn/django/">W3Cschool</a></h4>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20200331121714837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[解决Django与echarts结合出现Uncaught SyntaxError: Unexpected token &和&#39;的问题]]></title>
        <id>https://906571331.github.io/yx.github.io/post/jie-jue-django-yu-echarts-jie-he-chu-xian-uncaught-syntaxerror-unexpected-token-andhe-and39de-wen-ti/</id>
        <link href="https://906571331.github.io/yx.github.io/post/jie-jue-django-yu-echarts-jie-he-chu-xian-uncaught-syntaxerror-unexpected-token-andhe-and39de-wen-ti/">
        </link>
        <updated>2020-03-30T13:52:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="出现的问题">出现的问题</h3>
<p>在Django与echarts结合中，出现了<br>
data:[&amp;#39];和Uncaught SyntaxError: Unexpected token &amp;的问题<br>
<img src="https://img-blog.csdnimg.cn/20200330214902150.png" alt="在这里插入图片描述" loading="lazy"><br>
<img src="https://img-blog.csdnimg.cn/20200330214925997.png" alt="在这里插入图片描述" loading="lazy"></p>
<h3 id="出错的代码">出错的代码</h3>
<pre><code class="language-bash">    xAxis: {
        type: 'category',
        boundaryGap: false,
        data: {{ name_list}}
    },
</code></pre>
<p>原因是前端页面echarts接收数据时，没有添加|safe</p>
<h3 id="解决的方法">解决的方法</h3>
<p>在echarts页面data接收来自views.py的数据时，加上|safe,具体效果如下：</p>
<pre><code class="language-bash">    xAxis: {
        type: 'category',
        boundaryGap: false,
        data: {{ name_list|safe }}
    },
</code></pre>
<p>重启Django应用即可正确显示echarts图表</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django中引入echarts图表做数据可视化]]></title>
        <id>https://906571331.github.io/yx.github.io/post/django-zhong-yin-ru-echarts-tu-biao-zuo-shu-ju-ke-shi-hua/</id>
        <link href="https://906571331.github.io/yx.github.io/post/django-zhong-yin-ru-echarts-tu-biao-zuo-shu-ju-ke-shi-hua/">
        </link>
        <updated>2020-03-30T13:45:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="本篇博客将详细介绍django中如何引入echarts库">本篇博客将详细介绍Django中如何引入echarts库：</h3>
<h4 id="从echarts官网中选择所需要的图表的样式">从echarts官网中选择所需要的图表的样式</h4>
<p><img src="https://img-blog.csdnimg.cn/20200330212900765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
选择好样式打开此页面，将红框中代码放入前端页面中<br>
<img src="https://img-blog.csdnimg.cn/2020033021302261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
需要放入的位置：</p>
<pre><code class="language-bash">&lt;script type=&quot;text/javascript&quot;&gt;
var myChart = echarts.init(document.getElementById('chart_1'));
#将option代码放入这个位置
 myChart.setOption(option);   
 &lt;/script&gt;
</code></pre>
<p>在html文件&lt; head&gt;&lt; /head&gt;标签中引入echats库</p>
<pre><code class="language-bash">&lt;script src=&quot;{% static 'js/echarts.min.js' %}&quot;  charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
</code></pre>
<p>views.py设置方法,前提是models.py中有User这个表,name和base_ mark是表中的两个字段</p>
<pre><code class="language-bash">def anaylize(request):
    users=User.objects.all()#获取表中的所有对象
    base_list = [] #设置为list类型，一会儿将其填入data中
    name_list= []#设置为list类型，一会儿将其填入data中
    for user in users:# 遍历
        name_list.append(user.name)
        base_list.append(user.base_mark)
    return render(request,&quot;anaylize.html&quot;,{'name_list':name_list,'base_list':base_list})#在anaylize.html中接收两个参数，一个是name_list,一个是base_list
</code></pre>
<p>anaylize.html中data接收的方法：</p>
<h4 id="注意name是字符串对象这里必须加上safe否则将会报错uncaught-syntaxerror-unexpected-token-同时data中的数据被js解析为-39">注意：name是字符串对象，这里必须加上|safe，否则将会报错（Uncaught SyntaxError: Unexpected token &amp;），同时data中的数据被js解析为： &amp; #39;</h4>
<pre><code class="language-bash">    xAxis: {
        type: 'category',
        boundaryGap: false,
        data: {{ name_list|safe }}
    },
</code></pre>
<p>而普通的int型的数据接收方法：（不需要|safe）</p>
<pre><code class="language-bash">    series: [{
        data:{{base_list}},
        type: 'line',
        areaStyle: {}
    }]
</code></pre>
<p>向数据库中输入两条数据，重启Django应用，即可正确显示图表</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用gitee解决github下载仓库下载速度缓慢的问题]]></title>
        <id>https://906571331.github.io/yx.github.io/post/shi-yong-gitee-jie-jue-github-xia-zai-cang-ku-xia-zai-su-du-huan-man-de-wen-ti/</id>
        <link href="https://906571331.github.io/yx.github.io/post/shi-yong-gitee-jie-jue-github-xia-zai-cang-ku-xia-zai-su-du-huan-man-de-wen-ti/">
        </link>
        <updated>2020-03-30T09:55:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="出现的问题">出现的问题</h3>
<p>在github下载代码时总是出现网络延时等问题导致下载失败或下载缓慢</p>
<h3 id="解决的办法">解决的办法</h3>
<p>将github中的仓库导入到gitee中，然后从gitee中下载仓库<br>
复制github中的仓库地址：<br>
<img src="https://img-blog.csdnimg.cn/20200330175055393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
在gitee中新建仓库：<img src="https://img-blog.csdnimg.cn/20200330175256587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
选择导入已有仓库，将刚刚复制的github地址填入<br>
<img src="https://img-blog.csdnimg.cn/20200330175320401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
打开刚刚新建的仓库，点击下载，即可高速下载github中的仓库<br>
<img src="https://img-blog.csdnimg.cn/20200330174943211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[阿里云服务器出现  Resource stopwords not found.   Please use the NLTK Downloader to obtain the resource:]]></title>
        <id>https://906571331.github.io/yx.github.io/post/a-li-yun-fu-wu-qi-chu-xian-resource-stopwords-not-found-please-use-the-nltk-downloader-to-obtain-the-resource/</id>
        <link href="https://906571331.github.io/yx.github.io/post/a-li-yun-fu-wu-qi-chu-xian-resource-stopwords-not-found-please-use-the-nltk-downloader-to-obtain-the-resource/">
        </link>
        <updated>2020-03-30T09:22:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="出现的问题">出现的问题</h3>
<p>在阿里云ubuntu服务器布置Django项目中出现如下错误：</p>
<pre><code class="language-bash">  Resource stopwords not found.
  Please use the NLTK Downloader to obtain the resource:
</code></pre>
<p>具体如下所示：</p>
<pre><code class="language-bash">Watching for file changes with StatReloader
Performing system checks...

Exception in thread django-main-thread:
Traceback (most recent call last):
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/nltk/corpus/util.py&quot;, line 86, in __load
    root = nltk.data.find('{}/{}'.format(self.subdir, zip_name))
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/nltk/data.py&quot;, line 701, in find
    raise LookupError(resource_not_found)
LookupError: 
**********************************************************************
  Resource stopwords not found.
  Please use the NLTK Downloader to obtain the resource:

  &gt;&gt;&gt; import nltk
  &gt;&gt;&gt; nltk.download('stopwords')
  
  For more information see: https://www.nltk.org/data.html

  Attempted to load corpora/stopwords.zip/stopwords/

  Searched in:
    - '/root/nltk_data'
    - '/root/.virtualenvs/T/nltk_data'
    - '/root/.virtualenvs/T/share/nltk_data'
    - '/root/.virtualenvs/T/lib/nltk_data'
    - '/usr/share/nltk_data'
    - '/usr/local/share/nltk_data'
    - '/usr/lib/nltk_data'
    - '/usr/local/lib/nltk_data'
**********************************************************************


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File &quot;/usr/lib/python3.5/threading.py&quot;, line 914, in _bootstrap_inner
    self.run()
  File &quot;/usr/lib/python3.5/threading.py&quot;, line 862, in run
    self._target(*self._args, **self._kwargs)
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/utils/autoreload.py&quot;, line 54, in wrapper
    fn(*args, **kwargs)
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/core/management/commands/runserver.py&quot;, line 117, in inner_run
    self.check(display_num_errors=True)
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/core/management/base.py&quot;, line 390, in check
    include_deployment_checks=include_deployment_checks,
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/core/management/base.py&quot;, line 377, in _run_checks
    return checks.run_checks(**kwargs)
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/core/checks/registry.py&quot;, line 72, in run_checks
    new_errors = check(app_configs=app_configs)
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/core/checks/urls.py&quot;, line 13, in check_url_config
    return check_resolver(resolver)
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/core/checks/urls.py&quot;, line 23, in check_resolver
    return check_method()
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/urls/resolvers.py&quot;, line 399, in check
    for pattern in self.url_patterns:
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/utils/functional.py&quot;, line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/urls/resolvers.py&quot;, line 584, in url_patterns
    patterns = getattr(self.urlconf_module, &quot;urlpatterns&quot;, self.urlconf_module)
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/utils/functional.py&quot;, line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/django/urls/resolvers.py&quot;, line 577, in urlconf_module
    return import_module(self.urlconf_name)
  File &quot;/root/.virtualenvs/T/lib/python3.5/importlib/__init__.py&quot;, line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 986, in _gcd_import
  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 969, in _find_and_load
  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 958, in _find_and_load_unlocked
  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 673, in _load_unlocked
  File &quot;&lt;frozen importlib._bootstrap_external&gt;&quot;, line 665, in exec_module
  File &quot;&lt;frozen importlib._bootstrap&gt;&quot;, line 222, in _call_with_frames_removed
  File &quot;/home/recommend_system-master/recommend_system/urls.py&quot;, line 18, in &lt;module&gt;
    import movie_recommend.views
  File &quot;/home/recommend_system-master/movie_recommend/views.py&quot;, line 15, in &lt;module&gt;
    from movie_recommend.load_data import *
  File &quot;/home/recommend_system-master/movie_recommend/load_data.py&quot;, line 19, in &lt;module&gt;
    stoplist = stopwords.words('english')
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/nltk/corpus/util.py&quot;, line 123, in __getattr__
    self.__load()
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/nltk/corpus/util.py&quot;, line 88, in __load
    raise e
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/nltk/corpus/util.py&quot;, line 83, in __load
    root = nltk.data.find('{}/{}'.format(self.subdir, self.__name))
  File &quot;/root/.virtualenvs/T/lib/python3.5/site-packages/nltk/data.py&quot;, line 701, in find
    raise LookupError(resource_not_found)
LookupError: 
**********************************************************************
  Resource stopwords not found.
  Please use the NLTK Downloader to obtain the resource:

  &gt;&gt;&gt; import nltk
  &gt;&gt;&gt; nltk.download('stopwords')
  
  For more information see: https://www.nltk.org/data.html

  Attempted to load corpora/stopwords

  Searched in:
    - '/root/nltk_data'
    - '/root/.virtualenvs/T/nltk_data'
    - '/root/.virtualenvs/T/share/nltk_data'
    - '/root/.virtualenvs/T/lib/nltk_data'
    - '/usr/share/nltk_data'
    - '/usr/local/share/nltk_data'
    - '/usr/lib/nltk_data'
    - '/usr/local/lib/nltk_data'
**********************************************************************
</code></pre>
<h3 id="解决的思路">解决的思路：</h3>
<p>ubuntu中打开python3解释器</p>
<pre><code class="language-bash">  &gt;&gt;&gt;python3 
  &gt;&gt;&gt; import nltk
  &gt;&gt;&gt; nltk.download('stopwords')
</code></pre>
<p>再次重启Django项目即可正确运行</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[django.core.exceptions.ImproperlyConfigured: mysqlclient 1.3.13 or newer is required; you have 0.9.3.]]></title>
        <id>https://906571331.github.io/yx.github.io/post/djangocoreexceptionsimproperlyconfigured-mysqlclient-1313-or-newer-is-required-you-have-093/</id>
        <link href="https://906571331.github.io/yx.github.io/post/djangocoreexceptionsimproperlyconfigured-mysqlclient-1313-or-newer-is-required-you-have-093/">
        </link>
        <updated>2020-03-30T09:06:24.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<h3 id="出现的问题">出现的问题：</h3>
<p>阿里云ubuntu服务器Django项目开发中出现</p>
<pre><code class="language-bash">    raise ImproperlyConfigured('mysqlclient 1.3.13 or newer is required; you have %s.' % Database.__version__)
django.core.exceptions.ImproperlyConfigured: mysqlclient 1.3.13 or newer is required; you have 0.9.3.
</code></pre>
<h3 id="解决的思路">解决的思路：</h3>
<h4 id="一修改basepy">一.修改base.py</h4>
<pre><code class="language-bash">cd /root/.virtualenvs/T/lib/python3.5/site-packages/django/db/backends/mysql
</code></pre>
<p>打开base.py</p>
<pre><code class="language-bash">vi base.py
</code></pre>
<p>知道到下图所示位置：<br>
<img src="https://img-blog.csdnimg.cn/20200330165529285.png" alt="在这里插入图片描述" loading="lazy"><br>
将下面两行注释掉，结果如图所示：</p>
<pre><code class="language-bash">version = Database.version_info
#if version &lt; (1, 3, 13):
 #   raise ImproperlyConfigured('mysqlclient 1.3.13 or newer is required; you have %s.' % Database.__version__)
</code></pre>
<h4 id="二修改__init__py">二.修改__init__.py</h4>
<p>添加如下代码：</p>
<pre><code class="language-bash">import pymysql
pymysql.install_as_MySQLdb()
</code></pre>
<p>第二步完成之后若出现如下报错，则进行第三步：</p>
<pre><code class="language-bash">    query = query.decode(errors='replace')
AttributeError: 'str' object has no attribute 'decode'
</code></pre>
<h4 id="第三步修改operationspy">第三步.修改operations.py</h4>
<p>打开operations.py所在的文件夹</p>
<pre><code class="language-bash">cd /root/.virtualenvs/T/lib/python3.5/site-packages/django/db/backends/mysql/
</code></pre>
<p>打开operations.py，并找到如下代码</p>
<pre><code class="language-bash">        if query is not None:
            query = query.decode(errors='replace')
        return query
</code></pre>
<p>修改decode为enconde,结果如图所示：</p>
<pre><code class="language-bash">        if query is not None:
            query = query.encode(errors='replace')
        return query
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20200330170302985.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h4 id="第四步迁移数据库">第四步：迁移数据库</h4>
<pre><code class="language-bash">python manage.py makemigrations
python manage.py migrate
</code></pre>
<h4 id="重启django项目">重启Django项目：</h4>
<pre><code class="language-bash">python manage.py runserver 0:8000
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[uebrip安装]]></title>
        <id>https://906571331.github.io/yx.github.io/post/uebrip-an-zhuang/</id>
        <link href="https://906571331.github.io/yx.github.io/post/uebrip-an-zhuang/">
        </link>
        <updated>2020-03-29T09:52:05.000Z</updated>
        <content type="html"><![CDATA[<p>usbrip（源自“USB Ripper”，而不是“USB RIP”）是一个带有CLI界面的开源取证工具，可以让您在Linux机器上跟踪USB设备（即USB事件历史记录，“已连接”和“已断开连接”事件）。<br>
usbrip是用Python 3编写的软件，它解析Linux日志文件（/var/log/syslog<em>或/var/log/messages</em>）以构建USB事件历史表。此类表格可能包含以下列：“已连接”（日期和时间），“用户”，“VID”（供应商ID），“PID”（产品ID），“产品”，“制造商”，“序列号”， “端口”和“断开连接”（日期和时间）。</p>
<p>此外，它还可以：</p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-968420"><label class="task-list-item-label" for="task-item-968420"> 导出收集的信息作为JSON转储;</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8250503"><label class="task-list-item-label" for="task-item-8250503"> 生成一个授权（可信）USB设备列表作为JSON（称之为auth.json）;</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8800788"><label class="task-list-item-label" for="task-item-8800788"> 根据以下内容搜索“违规事件” auth.json：show（或生成另一个JSON）USB设备出现在历史记录中并且不会出现在auth.json;</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8443597"><label class="task-list-item-label" for="task-item-8443597"> *使用-sflag * 安装时，创建加密存储（7zip存档），以便在crontab调度程序的帮助下自动备份和累积USB事件;</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7641857"><label class="task-list-item-label" for="task-item-7641857"> 根据其VID和/或PID搜索有关特定USB设备的其他详细信息。</label></li>
</ul>
<pre><code class="language-c"># 下载
~$ git clone https://github.com/snovvcrash/usbrip.git usbrip &amp;&amp; cd usbrip
~/usbrip$
# 安装依赖
~$ sudo apt install python3-venv p7zip-full -y
</code></pre>
<p>有两种方法可以将usbrip安装到系统中：pip或setup.py。<br>
pip 要么 setup.py<br>
首先，usbrip是pip可安装的。这意味着在git克隆了repo之后你可以简单地启动pip安装过程，然后在终端的任何地方运行usbrip，如下所示：</p>
<pre><code class="language-bash">~/usbrip$ python3 -m venv venv &amp;&amp; source venv/bin/activate
(venv) ~/usbrip$ pip install .
(venv) ~/usbrip$ usbrip -h
</code></pre>
<p>或者，如果要在本地解析Python依赖关系（不打扰PyPI），请使用setup.py：</p>
<pre><code class="language-bash">~/usbrip$ python3 -m venv venv &amp;&amp; source venv/bin/activate
(venv) ~/usbrip$ python setup.py install
(venv) ~/usbrip$ usbrip -h
</code></pre>
<h3 id="示例">示例</h3>
<p>显示所有USB设备的事件历史</p>
<pre><code class="language-bash">$ usbrip events history -ql -n 100
</code></pre>
<p><img src="https://img-blog.csdnimg.cn/20200329174741724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>
显示外部USB设备的事件历史</p>
<pre><code class="language-bash">$ usbrip events history -et -c conn vid pid disconn serial -d &quot;Dec  9&quot; &quot;Dec 10&quot; -f /var/log/syslog.1 /var/log/syslog.2.gz
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[在线绘制流程图网站、思维导图网站总结]]></title>
        <id>https://906571331.github.io/yx.github.io/post/zai-xian-hui-zhi-liu-cheng-tu-wang-zhan-si-wei-dao-tu-wang-zhan-zong-jie/</id>
        <link href="https://906571331.github.io/yx.github.io/post/zai-xian-hui-zhi-liu-cheng-tu-wang-zhan-si-wei-dao-tu-wang-zhan-zong-jie/">
        </link>
        <updated>2020-03-27T00:45:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="本篇博客总结了在线绘制流程图-思维导图的几个网站欢迎留言补充">本篇博客总结了在线绘制流程图、思维导图的几个网站，欢迎留言补充</h3>
<h4 id="1processson">1.<a href="https://www.processon.com/">processsOn</a></h4>
<p>免费在线作图、实时协作<br>
支持流程图、思维导图、原型图、UML、网络拓扑图、组织结构图等<br>
<img src="https://img-blog.csdnimg.cn/20200327083351915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p>
<h4 id="2爱莫流程图">2.<a href="https://flowchart.airmore.cn/">爱莫流程图</a></h4>
<p>爱莫流程图，便捷的思维导图工具。让您在线创建、保存并分享您的思路。<br>
流程图,思维导图,在线,分享,协作,Brain mapping,Mind mapping,svg,minder,<br>
<img src="https://img-blog.csdnimg.cn/20200327083517220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p>
<h4 id="3百度脑图">3.<a href="https://naotu.baidu.com/">百度脑图</a></h4>
<p>免安装 云存储 易分享<br>
舒适的体验 丰富的功能<br>
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200327083728840.png?x-oss-process=image/wat ermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70)</p>
<h4 id="4迅捷思维导图">4.<a href="http://rj.98youxi.com/siweidaotuOnline/?utm_source=baidu-11&amp;utm_medium=cpc&amp;utm_campaign=15-%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E8%BD%AF%E4%BB%B6&amp;utm_term=%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E5%B7%A5%E5%85%B7&amp;bd_vid=11224839481549677223">迅捷思维导图</a></h4>
<p>迅捷思维导图是一款体积小巧、功能强大的可用于绘制各种专业的业务流程图、组织结构图、数据流程图等<br>
迅捷思维导图制作软件，思维导图，思维导图开始使用，思维导图制作，思维导图绘图软件<br>
<img src="https://img-blog.csdnimg.cn/2020032708383941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p>
<h4 id="5mindline思维导图">5.<a href="http://www.mindline.cn/">MindLine思维导图</a></h4>
<p>&quot;MindLine思维导图是一款快速制作笔记和头脑风暴的工具，支持各大平台下载使用和文件云存储同步。<br>
思维导图,逻辑思维,头脑风暴,流程图,结构图,文字大纲,脑图,幕布,mindmap,mindnode,xmind,lighten,mindmaster<br>
<img src="https://img-blog.csdnimg.cn/20200327084213189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMDkyMDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p>
]]></content>
    </entry>
</feed>